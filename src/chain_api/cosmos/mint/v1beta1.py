# Generated by the protocol buffer compiler.  DO NOT EDIT!
# sources: cosmos/mint/v1beta1/mint.proto, cosmos/mint/v1beta1/query.proto
# plugin: python-betterproto
from dataclasses import dataclass

import betterproto
import grpclib


@dataclass
class Minter(betterproto.Message):
    """Minter represents the minting state."""

    # current annual inflation rate
    inflation: str = betterproto.string_field(1)
    # current annual expected provisions
    annual_provisions: str = betterproto.string_field(2)


@dataclass
class Params(betterproto.Message):
    """Params holds parameters for the mint module."""

    # type of coin to mint
    mint_denom: str = betterproto.string_field(1)
    # maximum annual change in inflation rate
    inflation_rate_change: str = betterproto.string_field(2)
    # maximum inflation rate
    inflation_max: str = betterproto.string_field(3)
    # minimum inflation rate
    inflation_min: str = betterproto.string_field(4)
    # goal of percent bonded atoms
    goal_bonded: str = betterproto.string_field(5)
    # expected blocks per year
    blocks_per_year: int = betterproto.uint64_field(6)


@dataclass
class QueryParamsRequest(betterproto.Message):
    """
    QueryParamsRequest is the request type for the Query/Params RPC method.
    """

    pass


@dataclass
class QueryParamsResponse(betterproto.Message):
    """
    QueryParamsResponse is the response type for the Query/Params RPC method.
    """

    # params defines the parameters of the module.
    params: "Params" = betterproto.message_field(1)


@dataclass
class QueryInflationRequest(betterproto.Message):
    """
    QueryInflationRequest is the request type for the Query/Inflation RPC
    method.
    """

    pass


@dataclass
class QueryInflationResponse(betterproto.Message):
    """
    QueryInflationResponse is the response type for the Query/Inflation RPC
    method.
    """

    # inflation is the current minting inflation value.
    inflation: bytes = betterproto.bytes_field(1)


@dataclass
class QueryAnnualProvisionsRequest(betterproto.Message):
    """
    QueryAnnualProvisionsRequest is the request type for the
    Query/AnnualProvisions RPC method.
    """

    pass


@dataclass
class QueryAnnualProvisionsResponse(betterproto.Message):
    """
    QueryAnnualProvisionsResponse is the response type for the
    Query/AnnualProvisions RPC method.
    """

    # annual_provisions is the current minting annual provisions value.
    annual_provisions: bytes = betterproto.bytes_field(1)


class QueryStub(betterproto.ServiceStub):
    """Query provides defines the gRPC querier service."""

    async def params(self) -> QueryParamsResponse:
        """Params returns the total set of minting parameters."""

        request = QueryParamsRequest()

        return await self._unary_unary(
            "/cosmos.mint.v1beta1.Query/Params",
            request,
            QueryParamsResponse,
        )

    async def inflation(self) -> QueryInflationResponse:
        """Inflation returns the current minting inflation value."""

        request = QueryInflationRequest()

        return await self._unary_unary(
            "/cosmos.mint.v1beta1.Query/Inflation",
            request,
            QueryInflationResponse,
        )

    async def annual_provisions(self) -> QueryAnnualProvisionsResponse:
        """AnnualProvisions current minting annual provisions value."""

        request = QueryAnnualProvisionsRequest()

        return await self._unary_unary(
            "/cosmos.mint.v1beta1.Query/AnnualProvisions",
            request,
            QueryAnnualProvisionsResponse,
        )
