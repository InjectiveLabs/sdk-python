# Generated by the protocol buffer compiler.  DO NOT EDIT!
# sources: cosmos/distribution/v1beta1/tx.proto
# plugin: python-betterproto
from dataclasses import dataclass
from typing import List

import betterproto
import grpclib

from .cosmos.base import v1beta1


@dataclass
class MsgSetWithdrawAddress(betterproto.Message):
    """
    MsgSetWithdrawAddress sets the withdraw address for a delegator (or
    validator self-delegation).
    """

    delegator_address: str = betterproto.string_field(1)
    withdraw_address: str = betterproto.string_field(2)


@dataclass
class MsgSetWithdrawAddressResponse(betterproto.Message):
    """
    MsgSetWithdrawAddressResponse defines the Msg/SetWithdrawAddress response
    type.
    """

    pass


@dataclass
class MsgWithdrawDelegatorReward(betterproto.Message):
    """
    MsgWithdrawDelegatorReward represents delegation withdrawal to a delegator
    from a single validator.
    """

    delegator_address: str = betterproto.string_field(1)
    validator_address: str = betterproto.string_field(2)


@dataclass
class MsgWithdrawDelegatorRewardResponse(betterproto.Message):
    """
    MsgWithdrawDelegatorRewardResponse defines the Msg/WithdrawDelegatorReward
    response type.
    """

    pass


@dataclass
class MsgWithdrawValidatorCommission(betterproto.Message):
    """
    MsgWithdrawValidatorCommission withdraws the full commission to the
    validator address.
    """

    validator_address: str = betterproto.string_field(1)


@dataclass
class MsgWithdrawValidatorCommissionResponse(betterproto.Message):
    """
    MsgWithdrawValidatorCommissionResponse defines the
    Msg/WithdrawValidatorCommission response type.
    """

    pass


@dataclass
class MsgFundCommunityPool(betterproto.Message):
    """
    MsgFundCommunityPool allows an account to directly fund the community pool.
    """

    amount: List[v1beta1.Coin] = betterproto.message_field(1)
    depositor: str = betterproto.string_field(2)


@dataclass
class MsgFundCommunityPoolResponse(betterproto.Message):
    """
    MsgFundCommunityPoolResponse defines the Msg/FundCommunityPool response
    type.
    """

    pass


class MsgStub(betterproto.ServiceStub):
    """Msg defines the distribution Msg service."""

    async def set_withdraw_address(
        self, *, delegator_address: str = "", withdraw_address: str = ""
    ) -> MsgSetWithdrawAddressResponse:
        """
        SetWithdrawAddress defines a method to change the withdraw address for
        a delegator (or validator self-delegation).
        """

        request = MsgSetWithdrawAddress()
        request.delegator_address = delegator_address
        request.withdraw_address = withdraw_address

        return await self._unary_unary(
            "/cosmos.distribution.v1beta1.Msg/SetWithdrawAddress",
            request,
            MsgSetWithdrawAddressResponse,
        )

    async def withdraw_delegator_reward(
        self, *, delegator_address: str = "", validator_address: str = ""
    ) -> MsgWithdrawDelegatorRewardResponse:
        """
        WithdrawDelegatorReward defines a method to withdraw rewards of
        delegator from a single validator.
        """

        request = MsgWithdrawDelegatorReward()
        request.delegator_address = delegator_address
        request.validator_address = validator_address

        return await self._unary_unary(
            "/cosmos.distribution.v1beta1.Msg/WithdrawDelegatorReward",
            request,
            MsgWithdrawDelegatorRewardResponse,
        )

    async def withdraw_validator_commission(
        self, *, validator_address: str = ""
    ) -> MsgWithdrawValidatorCommissionResponse:
        """
        WithdrawValidatorCommission defines a method to withdraw the full
        commission to the validator address.
        """

        request = MsgWithdrawValidatorCommission()
        request.validator_address = validator_address

        return await self._unary_unary(
            "/cosmos.distribution.v1beta1.Msg/WithdrawValidatorCommission",
            request,
            MsgWithdrawValidatorCommissionResponse,
        )

    async def fund_community_pool(
        self, *, amount: List[v1beta1.Coin] = [], depositor: str = ""
    ) -> MsgFundCommunityPoolResponse:
        """
        FundCommunityPool defines a method to allow an account to directly fund
        the community pool.
        """

        request = MsgFundCommunityPool()
        if amount is not None:
            request.amount = amount
        request.depositor = depositor

        return await self._unary_unary(
            "/cosmos.distribution.v1beta1.Msg/FundCommunityPool",
            request,
            MsgFundCommunityPoolResponse,
        )
