# Generated by the protocol buffer compiler.  DO NOT EDIT!
# sources: ibc/core/client/v1/client.proto
# plugin: python-betterproto
from dataclasses import dataclass
from typing import List

import betterproto

from .google import protobuf


@dataclass
class IdentifiedClientState(betterproto.Message):
    """
    IdentifiedClientState defines a client state with an additional client
    identifier field.
    """

    # client identifier
    client_id: str = betterproto.string_field(1)
    # client state
    client_state: protobuf.Any = betterproto.message_field(2)


@dataclass
class ConsensusStateWithHeight(betterproto.Message):
    """
    ConsensusStateWithHeight defines a consensus state with an additional
    height field.
    """

    # consensus state height
    height: "Height" = betterproto.message_field(1)
    # consensus state
    consensus_state: protobuf.Any = betterproto.message_field(2)


@dataclass
class ClientConsensusStates(betterproto.Message):
    """
    ClientConsensusStates defines all the stored consensus states for a given
    client.
    """

    # client identifier
    client_id: str = betterproto.string_field(1)
    # consensus states and their heights associated with the client
    consensus_states: List["ConsensusStateWithHeight"] = betterproto.message_field(2)


@dataclass
class ClientUpdateProposal(betterproto.Message):
    """
    ClientUpdateProposal is a governance proposal. If it passes, the client is
    updated with the provided header. The update may fail if the header is not
    valid given certain conditions specified by the client implementation.
    """

    # the title of the update proposal
    title: str = betterproto.string_field(1)
    # the description of the proposal
    description: str = betterproto.string_field(2)
    # the client identifier for the client to be updated if the proposal passes
    client_id: str = betterproto.string_field(3)
    # the header used to update the client if the proposal passes
    header: protobuf.Any = betterproto.message_field(4)


@dataclass
class MsgCreateClient(betterproto.Message):
    """MsgCreateClient defines a message to create an IBC client"""

    # client unique identifier
    client_id: str = betterproto.string_field(1)
    # light client state
    client_state: protobuf.Any = betterproto.message_field(2)
    # consensus state associated with the client that corresponds to a given
    # height.
    consensus_state: protobuf.Any = betterproto.message_field(3)
    # signer address
    signer: str = betterproto.string_field(4)


@dataclass
class MsgUpdateClient(betterproto.Message):
    """
    MsgUpdateClient defines an sdk.Msg to update a IBC client state using the
    given header.
    """

    # client unique identifier
    client_id: str = betterproto.string_field(1)
    # header to update the light client
    header: protobuf.Any = betterproto.message_field(2)
    # signer address
    signer: str = betterproto.string_field(3)


@dataclass
class MsgUpgradeClient(betterproto.Message):
    """
    MsgUpgradeClient defines an sdk.Msg to upgrade an IBC client to a new
    client state
    """

    # client unique identifier
    client_id: str = betterproto.string_field(1)
    # upgraded client state
    client_state: protobuf.Any = betterproto.message_field(2)
    # height at which old chain halts and upgrades (i.e last block executed)
    upgrade_height: "Height" = betterproto.message_field(3)
    # proof that old chain committed to new client
    proof_upgrade: bytes = betterproto.bytes_field(4)
    # signer address
    signer: str = betterproto.string_field(5)


@dataclass
class MsgSubmitMisbehaviour(betterproto.Message):
    """
    MsgSubmitMisbehaviour defines an sdk.Msg type that submits Evidence for
    light client misbehaviour.
    """

    # client unique identifier
    client_id: str = betterproto.string_field(1)
    # misbehaviour used for freezing the light client
    misbehaviour: protobuf.Any = betterproto.message_field(2)
    # signer address
    signer: str = betterproto.string_field(3)


@dataclass
class Height(betterproto.Message):
    """
    Height is a monotonically increasing data type that can be compared against
    another Height for the purposes of updating and freezing clients Normally
    the VersionHeight is incremented at each height while keeping version
    number the same However some consensus algorithms may choose to reset the
    height in certain conditions e.g. hard forks, state-machine breaking
    changes In these cases, the version number is incremented so that height
    continues to be monitonically increasing even as the VersionHeight gets
    reset
    """

    # the version that the client is currently on
    version_number: int = betterproto.uint64_field(1)
    # the height within the given version
    version_height: int = betterproto.uint64_field(2)
