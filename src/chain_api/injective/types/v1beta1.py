# Generated by the protocol buffer compiler.  DO NOT EDIT!
# sources: injective/types/v1beta1/tx_ext.proto, injective/types/v1beta1/account.proto
# plugin: python-betterproto
from dataclasses import dataclass

import betterproto

from .cosmos.auth import v1beta1


@dataclass
class ExtensionOptionsWeb3Tx(betterproto.Message):
    # typedDataChainID used only in EIP712 Domain and should match Ethereum
    # network ID in a Web3 provider (e.g. Metamask).
    typed_data_chain_i_d: int = betterproto.uint64_field(1)
    # feePayer is an account address for the fee payer. It will be validated
    # during EIP712 signature checking.
    fee_payer: str = betterproto.string_field(2)
    # feePayerSig is a signature data from the fee paying account, allows to
    # perform fee delegation when using EIP712 Domain.
    fee_payer_sig: bytes = betterproto.bytes_field(3)


@dataclass
class EthAccount(betterproto.Message):
    """
    EthAccount implements the authtypes.AccountI interface and embeds an
    authtypes.BaseAccount type. It is compatible with the auth AccountKeeper.
    """

    base_account: v1beta1.BaseAccount = betterproto.message_field(1)
    code_hash: bytes = betterproto.bytes_field(2)
