# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: exchange/injective_trading_rpc.proto
# Protobuf Python Version: 5.26.1
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import symbol_database as _symbol_database
from google.protobuf.internal import builder as _builder
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n$exchange/injective_trading_rpc.proto\x12\x15injective_trading_rpc\"\x9c\x04\n\x1cListTradingStrategiesRequest\x12\x14\n\x05state\x18\x01 \x01(\tR\x05state\x12\x1b\n\tmarket_id\x18\x02 \x01(\tR\x08marketId\x12#\n\rsubaccount_id\x18\x03 \x01(\tR\x0csubaccountId\x12\'\n\x0f\x61\x63\x63ount_address\x18\x04 \x01(\tR\x0e\x61\x63\x63ountAddress\x12+\n\x11pending_execution\x18\x05 \x01(\x08R\x10pendingExecution\x12\x1d\n\nstart_time\x18\x06 \x01(\x12R\tstartTime\x12\x19\n\x08\x65nd_time\x18\x07 \x01(\x12R\x07\x65ndTime\x12\x14\n\x05limit\x18\x08 \x01(\x11R\x05limit\x12\x12\n\x04skip\x18\t \x01(\x04R\x04skip\x12#\n\rstrategy_type\x18\n \x03(\tR\x0cstrategyType\x12\x1f\n\x0bmarket_type\x18\x0b \x01(\tR\nmarketType\x12,\n\x12last_executed_time\x18\x0c \x01(\x12R\x10lastExecutedTime\x12\x19\n\x08with_tvl\x18\r \x01(\x08R\x07withTvl\x12\x30\n\x14is_trailing_strategy\x18\x0e \x01(\x08R\x12isTrailingStrategy\x12)\n\x10with_performance\x18\x0f \x01(\x08R\x0fwithPerformance\"\x9e\x01\n\x1dListTradingStrategiesResponse\x12\x46\n\nstrategies\x18\x01 \x03(\x0b\x32&.injective_trading_rpc.TradingStrategyR\nstrategies\x12\x35\n\x06paging\x18\x02 \x01(\x0b\x32\x1d.injective_trading_rpc.PagingR\x06paging\"\x9f\x10\n\x0fTradingStrategy\x12\x14\n\x05state\x18\x01 \x01(\tR\x05state\x12\x1b\n\tmarket_id\x18\x02 \x01(\tR\x08marketId\x12#\n\rsubaccount_id\x18\x03 \x01(\tR\x0csubaccountId\x12\'\n\x0f\x61\x63\x63ount_address\x18\x04 \x01(\tR\x0e\x61\x63\x63ountAddress\x12)\n\x10\x63ontract_address\x18\x05 \x01(\tR\x0f\x63ontractAddress\x12\'\n\x0f\x65xecution_price\x18\x06 \x01(\tR\x0e\x65xecutionPrice\x12#\n\rbase_quantity\x18\x07 \x01(\tR\x0c\x62\x61seQuantity\x12%\n\x0equote_quantity\x18\x14 \x01(\tR\rquoteQuantity\x12\x1f\n\x0blower_bound\x18\x08 \x01(\tR\nlowerBound\x12\x1f\n\x0bupper_bound\x18\t \x01(\tR\nupperBound\x12\x1b\n\tstop_loss\x18\n \x01(\tR\x08stopLoss\x12\x1f\n\x0btake_profit\x18\x0b \x01(\tR\ntakeProfit\x12\x19\n\x08swap_fee\x18\x0c \x01(\tR\x07swapFee\x12!\n\x0c\x62\x61se_deposit\x18\x11 \x01(\tR\x0b\x62\x61seDeposit\x12#\n\rquote_deposit\x18\x12 \x01(\tR\x0cquoteDeposit\x12(\n\x10market_mid_price\x18\x13 \x01(\tR\x0emarketMidPrice\x12>\n\x1bsubscription_quote_quantity\x18\x15 \x01(\tR\x19subscriptionQuoteQuantity\x12<\n\x1asubscription_base_quantity\x18\x16 \x01(\tR\x18subscriptionBaseQuantity\x12\x31\n\x15number_of_grid_levels\x18\x17 \x01(\tR\x12numberOfGridLevels\x12<\n\x1bshould_exit_with_quote_only\x18\x18 \x01(\x08R\x17shouldExitWithQuoteOnly\x12\x1f\n\x0bstop_reason\x18\x19 \x01(\tR\nstopReason\x12+\n\x11pending_execution\x18\x1a \x01(\x08R\x10pendingExecution\x12%\n\x0e\x63reated_height\x18\r \x01(\x12R\rcreatedHeight\x12%\n\x0eremoved_height\x18\x0e \x01(\x12R\rremovedHeight\x12\x1d\n\ncreated_at\x18\x0f \x01(\x12R\tcreatedAt\x12\x1d\n\nupdated_at\x18\x10 \x01(\x12R\tupdatedAt\x12\x1b\n\texit_type\x18\x1b \x01(\tR\x08\x65xitType\x12K\n\x10stop_loss_config\x18\x1c \x01(\x0b\x32!.injective_trading_rpc.ExitConfigR\x0estopLossConfig\x12O\n\x12take_profit_config\x18\x1d \x01(\x0b\x32!.injective_trading_rpc.ExitConfigR\x10takeProfitConfig\x12#\n\rstrategy_type\x18\x1e \x01(\tR\x0cstrategyType\x12)\n\x10\x63ontract_version\x18\x1f \x01(\tR\x0f\x63ontractVersion\x12#\n\rcontract_name\x18  \x01(\tR\x0c\x63ontractName\x12\x1f\n\x0bmarket_type\x18! \x01(\tR\nmarketType\x12(\n\x10last_executed_at\x18\" \x01(\x12R\x0elastExecutedAt\x12$\n\x0etrail_up_price\x18# \x01(\tR\x0ctrailUpPrice\x12(\n\x10trail_down_price\x18$ \x01(\tR\x0etrailDownPrice\x12(\n\x10trail_up_counter\x18% \x01(\x12R\x0etrailUpCounter\x12,\n\x12trail_down_counter\x18& \x01(\x12R\x10trailDownCounter\x12\x10\n\x03tvl\x18\' \x01(\tR\x03tvl\x12\x10\n\x03pnl\x18( \x01(\tR\x03pnl\x12\x19\n\x08pnl_perc\x18) \x01(\tR\x07pnlPerc\x12$\n\x0epnl_updated_at\x18* \x01(\x12R\x0cpnlUpdatedAt\x12 \n\x0bperformance\x18+ \x01(\tR\x0bperformance\x12\x10\n\x03roi\x18, \x01(\tR\x03roi\x12,\n\x12initial_base_price\x18- \x01(\tR\x10initialBasePrice\x12.\n\x13initial_quote_price\x18. \x01(\tR\x11initialQuotePrice\x12,\n\x12\x63urrent_base_price\x18/ \x01(\tR\x10\x63urrentBasePrice\x12.\n\x13\x63urrent_quote_price\x18\x30 \x01(\tR\x11\x63urrentQuotePrice\x12(\n\x10\x66inal_base_price\x18\x31 \x01(\tR\x0e\x66inalBasePrice\x12*\n\x11\x66inal_quote_price\x18\x32 \x01(\tR\x0f\x66inalQuotePrice\x12G\n\nfinal_data\x18\x33 \x01(\x0b\x32(.injective_trading_rpc.StrategyFinalDataR\tfinalData\"H\n\nExitConfig\x12\x1b\n\texit_type\x18\x01 \x01(\tR\x08\x65xitType\x12\x1d\n\nexit_price\x18\x02 \x01(\tR\texitPrice\"\x83\x03\n\x11StrategyFinalData\x12.\n\x13initial_base_amount\x18\x01 \x01(\tR\x11initialBaseAmount\x12\x30\n\x14initial_quote_amount\x18\x02 \x01(\tR\x12initialQuoteAmount\x12*\n\x11\x66inal_base_amount\x18\x03 \x01(\tR\x0f\x66inalBaseAmount\x12,\n\x12\x66inal_quote_amount\x18\x04 \x01(\tR\x10\x66inalQuoteAmount\x12,\n\x12initial_base_price\x18\x05 \x01(\tR\x10initialBasePrice\x12.\n\x13initial_quote_price\x18\x06 \x01(\tR\x11initialQuotePrice\x12(\n\x10\x66inal_base_price\x18\x07 \x01(\tR\x0e\x66inalBasePrice\x12*\n\x11\x66inal_quote_price\x18\x08 \x01(\tR\x0f\x66inalQuotePrice\"\x86\x01\n\x06Paging\x12\x14\n\x05total\x18\x01 \x01(\x12R\x05total\x12\x12\n\x04\x66rom\x18\x02 \x01(\x11R\x04\x66rom\x12\x0e\n\x02to\x18\x03 \x01(\x11R\x02to\x12.\n\x13\x63ount_by_subaccount\x18\x04 \x01(\x12R\x11\x63ountBySubaccount\x12\x12\n\x04next\x18\x05 \x03(\tR\x04next\"\x18\n\x16GetTradingStatsRequest\"\xf4\x01\n\x17GetTradingStatsResponse\x12:\n\x19\x61\x63tive_trading_strategies\x18\x01 \x01(\x04R\x17\x61\x63tiveTradingStrategies\x12G\n total_trading_strategies_created\x18\x02 \x01(\x04R\x1dtotalTradingStrategiesCreated\x12\x1b\n\ttotal_tvl\x18\x03 \x01(\tR\x08totalTvl\x12\x37\n\x07markets\x18\x04 \x03(\x0b\x32\x1d.injective_trading_rpc.MarketR\x07markets\"a\n\x06Market\x12\x1b\n\tmarket_id\x18\x01 \x01(\tR\x08marketId\x12:\n\x19\x61\x63tive_trading_strategies\x18\x02 \x01(\x04R\x17\x61\x63tiveTradingStrategies2\x8c\x02\n\x13InjectiveTradingRPC\x12\x82\x01\n\x15ListTradingStrategies\x12\x33.injective_trading_rpc.ListTradingStrategiesRequest\x1a\x34.injective_trading_rpc.ListTradingStrategiesResponse\x12p\n\x0fGetTradingStats\x12-.injective_trading_rpc.GetTradingStatsRequest\x1a..injective_trading_rpc.GetTradingStatsResponseB\xbb\x01\n\x19\x63om.injective_trading_rpcB\x18InjectiveTradingRpcProtoP\x01Z\x18/injective_trading_rpcpb\xa2\x02\x03IXX\xaa\x02\x13InjectiveTradingRpc\xca\x02\x13InjectiveTradingRpc\xe2\x02\x1fInjectiveTradingRpc\\GPBMetadata\xea\x02\x13InjectiveTradingRpcb\x06proto3')

_globals = globals()
_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, _globals)
_builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, 'exchange.injective_trading_rpc_pb2', _globals)
if not _descriptor._USE_C_DESCRIPTORS:
  _globals['DESCRIPTOR']._loaded_options = None
  _globals['DESCRIPTOR']._serialized_options = b'\n\031com.injective_trading_rpcB\030InjectiveTradingRpcProtoP\001Z\030/injective_trading_rpcpb\242\002\003IXX\252\002\023InjectiveTradingRpc\312\002\023InjectiveTradingRpc\342\002\037InjectiveTradingRpc\\GPBMetadata\352\002\023InjectiveTradingRpc'
  _globals['_LISTTRADINGSTRATEGIESREQUEST']._serialized_start=64
  _globals['_LISTTRADINGSTRATEGIESREQUEST']._serialized_end=604
  _globals['_LISTTRADINGSTRATEGIESRESPONSE']._serialized_start=607
  _globals['_LISTTRADINGSTRATEGIESRESPONSE']._serialized_end=765
  _globals['_TRADINGSTRATEGY']._serialized_start=768
  _globals['_TRADINGSTRATEGY']._serialized_end=2847
  _globals['_EXITCONFIG']._serialized_start=2849
  _globals['_EXITCONFIG']._serialized_end=2921
  _globals['_STRATEGYFINALDATA']._serialized_start=2924
  _globals['_STRATEGYFINALDATA']._serialized_end=3311
  _globals['_PAGING']._serialized_start=3314
  _globals['_PAGING']._serialized_end=3448
  _globals['_GETTRADINGSTATSREQUEST']._serialized_start=3450
  _globals['_GETTRADINGSTATSREQUEST']._serialized_end=3474
  _globals['_GETTRADINGSTATSRESPONSE']._serialized_start=3477
  _globals['_GETTRADINGSTATSRESPONSE']._serialized_end=3721
  _globals['_MARKET']._serialized_start=3723
  _globals['_MARKET']._serialized_end=3820
  _globals['_INJECTIVETRADINGRPC']._serialized_start=3823
  _globals['_INJECTIVETRADINGRPC']._serialized_end=4091
# @@protoc_insertion_point(module_scope)
