# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from osmosis.txfees.v1beta1 import query_pb2 as osmosis_dot_txfees_dot_v1beta1_dot_query__pb2


class QueryStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetEipBaseFee = channel.unary_unary(
                '/osmosis.txfees.v1beta1.Query/GetEipBaseFee',
                request_serializer=osmosis_dot_txfees_dot_v1beta1_dot_query__pb2.QueryEipBaseFeeRequest.SerializeToString,
                response_deserializer=osmosis_dot_txfees_dot_v1beta1_dot_query__pb2.QueryEipBaseFeeResponse.FromString,
                _registered_method=True)


class QueryServicer(object):
    """Missing associated documentation comment in .proto file."""

    def GetEipBaseFee(self, request, context):
        """Returns the current fee market EIP fee.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_QueryServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetEipBaseFee': grpc.unary_unary_rpc_method_handler(
                    servicer.GetEipBaseFee,
                    request_deserializer=osmosis_dot_txfees_dot_v1beta1_dot_query__pb2.QueryEipBaseFeeRequest.FromString,
                    response_serializer=osmosis_dot_txfees_dot_v1beta1_dot_query__pb2.QueryEipBaseFeeResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'osmosis.txfees.v1beta1.Query', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('osmosis.txfees.v1beta1.Query', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class Query(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def GetEipBaseFee(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/osmosis.txfees.v1beta1.Query/GetEipBaseFee',
            osmosis_dot_txfees_dot_v1beta1_dot_query__pb2.QueryEipBaseFeeRequest.SerializeToString,
            osmosis_dot_txfees_dot_v1beta1_dot_query__pb2.QueryEipBaseFeeResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)
