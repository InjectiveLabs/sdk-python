# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from pyinjective.proto.injective.oracle.v1beta1 import query_pb2 as injective_dot_oracle_dot_v1beta1_dot_query__pb2


class QueryStub(object):
    """Query defines the gRPC querier service.
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.Params = channel.unary_unary(
                '/injective.oracle.v1beta1.Query/Params',
                request_serializer=injective_dot_oracle_dot_v1beta1_dot_query__pb2.QueryParamsRequest.SerializeToString,
                response_deserializer=injective_dot_oracle_dot_v1beta1_dot_query__pb2.QueryParamsResponse.FromString,
                )
        self.BandRelayers = channel.unary_unary(
                '/injective.oracle.v1beta1.Query/BandRelayers',
                request_serializer=injective_dot_oracle_dot_v1beta1_dot_query__pb2.QueryBandRelayersRequest.SerializeToString,
                response_deserializer=injective_dot_oracle_dot_v1beta1_dot_query__pb2.QueryBandRelayersResponse.FromString,
                )
        self.BandPriceStates = channel.unary_unary(
                '/injective.oracle.v1beta1.Query/BandPriceStates',
                request_serializer=injective_dot_oracle_dot_v1beta1_dot_query__pb2.QueryBandPriceStatesRequest.SerializeToString,
                response_deserializer=injective_dot_oracle_dot_v1beta1_dot_query__pb2.QueryBandPriceStatesResponse.FromString,
                )
        self.BandIBCPriceStates = channel.unary_unary(
                '/injective.oracle.v1beta1.Query/BandIBCPriceStates',
                request_serializer=injective_dot_oracle_dot_v1beta1_dot_query__pb2.QueryBandIBCPriceStatesRequest.SerializeToString,
                response_deserializer=injective_dot_oracle_dot_v1beta1_dot_query__pb2.QueryBandIBCPriceStatesResponse.FromString,
                )
        self.PriceFeedPriceStates = channel.unary_unary(
                '/injective.oracle.v1beta1.Query/PriceFeedPriceStates',
                request_serializer=injective_dot_oracle_dot_v1beta1_dot_query__pb2.QueryPriceFeedPriceStatesRequest.SerializeToString,
                response_deserializer=injective_dot_oracle_dot_v1beta1_dot_query__pb2.QueryPriceFeedPriceStatesResponse.FromString,
                )
        self.CoinbasePriceStates = channel.unary_unary(
                '/injective.oracle.v1beta1.Query/CoinbasePriceStates',
                request_serializer=injective_dot_oracle_dot_v1beta1_dot_query__pb2.QueryCoinbasePriceStatesRequest.SerializeToString,
                response_deserializer=injective_dot_oracle_dot_v1beta1_dot_query__pb2.QueryCoinbasePriceStatesResponse.FromString,
                )
        self.PythPriceStates = channel.unary_unary(
                '/injective.oracle.v1beta1.Query/PythPriceStates',
                request_serializer=injective_dot_oracle_dot_v1beta1_dot_query__pb2.QueryPythPriceStatesRequest.SerializeToString,
                response_deserializer=injective_dot_oracle_dot_v1beta1_dot_query__pb2.QueryPythPriceStatesResponse.FromString,
                )
        self.ProviderPriceState = channel.unary_unary(
                '/injective.oracle.v1beta1.Query/ProviderPriceState',
                request_serializer=injective_dot_oracle_dot_v1beta1_dot_query__pb2.QueryProviderPriceStateRequest.SerializeToString,
                response_deserializer=injective_dot_oracle_dot_v1beta1_dot_query__pb2.QueryProviderPriceStateResponse.FromString,
                )
        self.OracleModuleState = channel.unary_unary(
                '/injective.oracle.v1beta1.Query/OracleModuleState',
                request_serializer=injective_dot_oracle_dot_v1beta1_dot_query__pb2.QueryModuleStateRequest.SerializeToString,
                response_deserializer=injective_dot_oracle_dot_v1beta1_dot_query__pb2.QueryModuleStateResponse.FromString,
                )
        self.HistoricalPriceRecords = channel.unary_unary(
                '/injective.oracle.v1beta1.Query/HistoricalPriceRecords',
                request_serializer=injective_dot_oracle_dot_v1beta1_dot_query__pb2.QueryHistoricalPriceRecordsRequest.SerializeToString,
                response_deserializer=injective_dot_oracle_dot_v1beta1_dot_query__pb2.QueryHistoricalPriceRecordsResponse.FromString,
                )
        self.OracleVolatility = channel.unary_unary(
                '/injective.oracle.v1beta1.Query/OracleVolatility',
                request_serializer=injective_dot_oracle_dot_v1beta1_dot_query__pb2.QueryOracleVolatilityRequest.SerializeToString,
                response_deserializer=injective_dot_oracle_dot_v1beta1_dot_query__pb2.QueryOracleVolatilityResponse.FromString,
                )
        self.OracleProvidersInfo = channel.unary_unary(
                '/injective.oracle.v1beta1.Query/OracleProvidersInfo',
                request_serializer=injective_dot_oracle_dot_v1beta1_dot_query__pb2.QueryOracleProvidersInfoRequest.SerializeToString,
                response_deserializer=injective_dot_oracle_dot_v1beta1_dot_query__pb2.QueryOracleProvidersInfoResponse.FromString,
                )
        self.OracleProviderPrices = channel.unary_unary(
                '/injective.oracle.v1beta1.Query/OracleProviderPrices',
                request_serializer=injective_dot_oracle_dot_v1beta1_dot_query__pb2.QueryOracleProviderPricesRequest.SerializeToString,
                response_deserializer=injective_dot_oracle_dot_v1beta1_dot_query__pb2.QueryOracleProviderPricesResponse.FromString,
                )
        self.OraclePrice = channel.unary_unary(
                '/injective.oracle.v1beta1.Query/OraclePrice',
                request_serializer=injective_dot_oracle_dot_v1beta1_dot_query__pb2.QueryOraclePriceRequest.SerializeToString,
                response_deserializer=injective_dot_oracle_dot_v1beta1_dot_query__pb2.QueryOraclePriceResponse.FromString,
                )
        self.PythPrice = channel.unary_unary(
                '/injective.oracle.v1beta1.Query/PythPrice',
                request_serializer=injective_dot_oracle_dot_v1beta1_dot_query__pb2.QueryPythPriceRequest.SerializeToString,
                response_deserializer=injective_dot_oracle_dot_v1beta1_dot_query__pb2.QueryPythPriceResponse.FromString,
                )


class QueryServicer(object):
    """Query defines the gRPC querier service.
    """

    def Params(self, request, context):
        """Retrieves oracle params
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def BandRelayers(self, request, context):
        """Retrieves the band relayers
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def BandPriceStates(self, request, context):
        """Retrieves the state for all band price feeds
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def BandIBCPriceStates(self, request, context):
        """Retrieves the state for all band ibc price feeds
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def PriceFeedPriceStates(self, request, context):
        """Retrieves the state for all price feeds
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CoinbasePriceStates(self, request, context):
        """Retrieves the state for all coinbase price feeds
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def PythPriceStates(self, request, context):
        """Retrieves the state for all pyth price feeds
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ProviderPriceState(self, request, context):
        """Retrieves the state for all provider price feeds
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def OracleModuleState(self, request, context):
        """Retrieves the entire oracle module's state
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def HistoricalPriceRecords(self, request, context):
        """Retrieves historical price records for a given OracleType and Symbol
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def OracleVolatility(self, request, context):
        """Retrieves mixed volatility value for the specified pair of base/quote
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def OracleProvidersInfo(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def OracleProviderPrices(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def OraclePrice(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def PythPrice(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_QueryServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'Params': grpc.unary_unary_rpc_method_handler(
                    servicer.Params,
                    request_deserializer=injective_dot_oracle_dot_v1beta1_dot_query__pb2.QueryParamsRequest.FromString,
                    response_serializer=injective_dot_oracle_dot_v1beta1_dot_query__pb2.QueryParamsResponse.SerializeToString,
            ),
            'BandRelayers': grpc.unary_unary_rpc_method_handler(
                    servicer.BandRelayers,
                    request_deserializer=injective_dot_oracle_dot_v1beta1_dot_query__pb2.QueryBandRelayersRequest.FromString,
                    response_serializer=injective_dot_oracle_dot_v1beta1_dot_query__pb2.QueryBandRelayersResponse.SerializeToString,
            ),
            'BandPriceStates': grpc.unary_unary_rpc_method_handler(
                    servicer.BandPriceStates,
                    request_deserializer=injective_dot_oracle_dot_v1beta1_dot_query__pb2.QueryBandPriceStatesRequest.FromString,
                    response_serializer=injective_dot_oracle_dot_v1beta1_dot_query__pb2.QueryBandPriceStatesResponse.SerializeToString,
            ),
            'BandIBCPriceStates': grpc.unary_unary_rpc_method_handler(
                    servicer.BandIBCPriceStates,
                    request_deserializer=injective_dot_oracle_dot_v1beta1_dot_query__pb2.QueryBandIBCPriceStatesRequest.FromString,
                    response_serializer=injective_dot_oracle_dot_v1beta1_dot_query__pb2.QueryBandIBCPriceStatesResponse.SerializeToString,
            ),
            'PriceFeedPriceStates': grpc.unary_unary_rpc_method_handler(
                    servicer.PriceFeedPriceStates,
                    request_deserializer=injective_dot_oracle_dot_v1beta1_dot_query__pb2.QueryPriceFeedPriceStatesRequest.FromString,
                    response_serializer=injective_dot_oracle_dot_v1beta1_dot_query__pb2.QueryPriceFeedPriceStatesResponse.SerializeToString,
            ),
            'CoinbasePriceStates': grpc.unary_unary_rpc_method_handler(
                    servicer.CoinbasePriceStates,
                    request_deserializer=injective_dot_oracle_dot_v1beta1_dot_query__pb2.QueryCoinbasePriceStatesRequest.FromString,
                    response_serializer=injective_dot_oracle_dot_v1beta1_dot_query__pb2.QueryCoinbasePriceStatesResponse.SerializeToString,
            ),
            'PythPriceStates': grpc.unary_unary_rpc_method_handler(
                    servicer.PythPriceStates,
                    request_deserializer=injective_dot_oracle_dot_v1beta1_dot_query__pb2.QueryPythPriceStatesRequest.FromString,
                    response_serializer=injective_dot_oracle_dot_v1beta1_dot_query__pb2.QueryPythPriceStatesResponse.SerializeToString,
            ),
            'ProviderPriceState': grpc.unary_unary_rpc_method_handler(
                    servicer.ProviderPriceState,
                    request_deserializer=injective_dot_oracle_dot_v1beta1_dot_query__pb2.QueryProviderPriceStateRequest.FromString,
                    response_serializer=injective_dot_oracle_dot_v1beta1_dot_query__pb2.QueryProviderPriceStateResponse.SerializeToString,
            ),
            'OracleModuleState': grpc.unary_unary_rpc_method_handler(
                    servicer.OracleModuleState,
                    request_deserializer=injective_dot_oracle_dot_v1beta1_dot_query__pb2.QueryModuleStateRequest.FromString,
                    response_serializer=injective_dot_oracle_dot_v1beta1_dot_query__pb2.QueryModuleStateResponse.SerializeToString,
            ),
            'HistoricalPriceRecords': grpc.unary_unary_rpc_method_handler(
                    servicer.HistoricalPriceRecords,
                    request_deserializer=injective_dot_oracle_dot_v1beta1_dot_query__pb2.QueryHistoricalPriceRecordsRequest.FromString,
                    response_serializer=injective_dot_oracle_dot_v1beta1_dot_query__pb2.QueryHistoricalPriceRecordsResponse.SerializeToString,
            ),
            'OracleVolatility': grpc.unary_unary_rpc_method_handler(
                    servicer.OracleVolatility,
                    request_deserializer=injective_dot_oracle_dot_v1beta1_dot_query__pb2.QueryOracleVolatilityRequest.FromString,
                    response_serializer=injective_dot_oracle_dot_v1beta1_dot_query__pb2.QueryOracleVolatilityResponse.SerializeToString,
            ),
            'OracleProvidersInfo': grpc.unary_unary_rpc_method_handler(
                    servicer.OracleProvidersInfo,
                    request_deserializer=injective_dot_oracle_dot_v1beta1_dot_query__pb2.QueryOracleProvidersInfoRequest.FromString,
                    response_serializer=injective_dot_oracle_dot_v1beta1_dot_query__pb2.QueryOracleProvidersInfoResponse.SerializeToString,
            ),
            'OracleProviderPrices': grpc.unary_unary_rpc_method_handler(
                    servicer.OracleProviderPrices,
                    request_deserializer=injective_dot_oracle_dot_v1beta1_dot_query__pb2.QueryOracleProviderPricesRequest.FromString,
                    response_serializer=injective_dot_oracle_dot_v1beta1_dot_query__pb2.QueryOracleProviderPricesResponse.SerializeToString,
            ),
            'OraclePrice': grpc.unary_unary_rpc_method_handler(
                    servicer.OraclePrice,
                    request_deserializer=injective_dot_oracle_dot_v1beta1_dot_query__pb2.QueryOraclePriceRequest.FromString,
                    response_serializer=injective_dot_oracle_dot_v1beta1_dot_query__pb2.QueryOraclePriceResponse.SerializeToString,
            ),
            'PythPrice': grpc.unary_unary_rpc_method_handler(
                    servicer.PythPrice,
                    request_deserializer=injective_dot_oracle_dot_v1beta1_dot_query__pb2.QueryPythPriceRequest.FromString,
                    response_serializer=injective_dot_oracle_dot_v1beta1_dot_query__pb2.QueryPythPriceResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'injective.oracle.v1beta1.Query', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class Query(object):
    """Query defines the gRPC querier service.
    """

    @staticmethod
    def Params(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/injective.oracle.v1beta1.Query/Params',
            injective_dot_oracle_dot_v1beta1_dot_query__pb2.QueryParamsRequest.SerializeToString,
            injective_dot_oracle_dot_v1beta1_dot_query__pb2.QueryParamsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def BandRelayers(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/injective.oracle.v1beta1.Query/BandRelayers',
            injective_dot_oracle_dot_v1beta1_dot_query__pb2.QueryBandRelayersRequest.SerializeToString,
            injective_dot_oracle_dot_v1beta1_dot_query__pb2.QueryBandRelayersResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def BandPriceStates(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/injective.oracle.v1beta1.Query/BandPriceStates',
            injective_dot_oracle_dot_v1beta1_dot_query__pb2.QueryBandPriceStatesRequest.SerializeToString,
            injective_dot_oracle_dot_v1beta1_dot_query__pb2.QueryBandPriceStatesResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def BandIBCPriceStates(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/injective.oracle.v1beta1.Query/BandIBCPriceStates',
            injective_dot_oracle_dot_v1beta1_dot_query__pb2.QueryBandIBCPriceStatesRequest.SerializeToString,
            injective_dot_oracle_dot_v1beta1_dot_query__pb2.QueryBandIBCPriceStatesResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def PriceFeedPriceStates(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/injective.oracle.v1beta1.Query/PriceFeedPriceStates',
            injective_dot_oracle_dot_v1beta1_dot_query__pb2.QueryPriceFeedPriceStatesRequest.SerializeToString,
            injective_dot_oracle_dot_v1beta1_dot_query__pb2.QueryPriceFeedPriceStatesResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CoinbasePriceStates(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/injective.oracle.v1beta1.Query/CoinbasePriceStates',
            injective_dot_oracle_dot_v1beta1_dot_query__pb2.QueryCoinbasePriceStatesRequest.SerializeToString,
            injective_dot_oracle_dot_v1beta1_dot_query__pb2.QueryCoinbasePriceStatesResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def PythPriceStates(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/injective.oracle.v1beta1.Query/PythPriceStates',
            injective_dot_oracle_dot_v1beta1_dot_query__pb2.QueryPythPriceStatesRequest.SerializeToString,
            injective_dot_oracle_dot_v1beta1_dot_query__pb2.QueryPythPriceStatesResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ProviderPriceState(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/injective.oracle.v1beta1.Query/ProviderPriceState',
            injective_dot_oracle_dot_v1beta1_dot_query__pb2.QueryProviderPriceStateRequest.SerializeToString,
            injective_dot_oracle_dot_v1beta1_dot_query__pb2.QueryProviderPriceStateResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def OracleModuleState(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/injective.oracle.v1beta1.Query/OracleModuleState',
            injective_dot_oracle_dot_v1beta1_dot_query__pb2.QueryModuleStateRequest.SerializeToString,
            injective_dot_oracle_dot_v1beta1_dot_query__pb2.QueryModuleStateResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def HistoricalPriceRecords(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/injective.oracle.v1beta1.Query/HistoricalPriceRecords',
            injective_dot_oracle_dot_v1beta1_dot_query__pb2.QueryHistoricalPriceRecordsRequest.SerializeToString,
            injective_dot_oracle_dot_v1beta1_dot_query__pb2.QueryHistoricalPriceRecordsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def OracleVolatility(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/injective.oracle.v1beta1.Query/OracleVolatility',
            injective_dot_oracle_dot_v1beta1_dot_query__pb2.QueryOracleVolatilityRequest.SerializeToString,
            injective_dot_oracle_dot_v1beta1_dot_query__pb2.QueryOracleVolatilityResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def OracleProvidersInfo(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/injective.oracle.v1beta1.Query/OracleProvidersInfo',
            injective_dot_oracle_dot_v1beta1_dot_query__pb2.QueryOracleProvidersInfoRequest.SerializeToString,
            injective_dot_oracle_dot_v1beta1_dot_query__pb2.QueryOracleProvidersInfoResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def OracleProviderPrices(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/injective.oracle.v1beta1.Query/OracleProviderPrices',
            injective_dot_oracle_dot_v1beta1_dot_query__pb2.QueryOracleProviderPricesRequest.SerializeToString,
            injective_dot_oracle_dot_v1beta1_dot_query__pb2.QueryOracleProviderPricesResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def OraclePrice(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/injective.oracle.v1beta1.Query/OraclePrice',
            injective_dot_oracle_dot_v1beta1_dot_query__pb2.QueryOraclePriceRequest.SerializeToString,
            injective_dot_oracle_dot_v1beta1_dot_query__pb2.QueryOraclePriceResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def PythPrice(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/injective.oracle.v1beta1.Query/PythPrice',
            injective_dot_oracle_dot_v1beta1_dot_query__pb2.QueryPythPriceRequest.SerializeToString,
            injective_dot_oracle_dot_v1beta1_dot_query__pb2.QueryPythPriceResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
