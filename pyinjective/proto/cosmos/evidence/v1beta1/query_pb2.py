# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: cosmos/evidence/v1beta1/query.proto
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from cosmos.base.query.v1beta1 import pagination_pb2 as cosmos_dot_base_dot_query_dot_v1beta1_dot_pagination__pb2
from gogoproto import gogo_pb2 as gogoproto_dot_gogo__pb2
from google.protobuf import any_pb2 as google_dot_protobuf_dot_any__pb2
from google.api import annotations_pb2 as google_dot_api_dot_annotations__pb2


DESCRIPTOR = _descriptor.FileDescriptor(
  name='cosmos/evidence/v1beta1/query.proto',
  package='cosmos.evidence.v1beta1',
  syntax='proto3',
  serialized_options=b'Z-github.com/cosmos/cosmos-sdk/x/evidence/types',
  create_key=_descriptor._internal_create_key,
  serialized_pb=b'\n#cosmos/evidence/v1beta1/query.proto\x12\x17\x63osmos.evidence.v1beta1\x1a*cosmos/base/query/v1beta1/pagination.proto\x1a\x14gogoproto/gogo.proto\x1a\x19google/protobuf/any.proto\x1a\x1cgoogle/api/annotations.proto\"g\n\x14QueryEvidenceRequest\x12O\n\revidence_hash\x18\x01 \x01(\x0c\x42\x38\xfa\xde\x1f\x34github.com/tendermint/tendermint/libs/bytes.HexBytes\"?\n\x15QueryEvidenceResponse\x12&\n\x08\x65vidence\x18\x01 \x01(\x0b\x32\x14.google.protobuf.Any\"U\n\x17QueryAllEvidenceRequest\x12:\n\npagination\x18\x01 \x01(\x0b\x32&.cosmos.base.query.v1beta1.PageRequest\"\x7f\n\x18QueryAllEvidenceResponse\x12&\n\x08\x65vidence\x18\x01 \x03(\x0b\x32\x14.google.protobuf.Any\x12;\n\npagination\x18\x02 \x01(\x0b\x32\'.cosmos.base.query.v1beta1.PageResponse2\xce\x02\n\x05Query\x12\xa4\x01\n\x08\x45vidence\x12-.cosmos.evidence.v1beta1.QueryEvidenceRequest\x1a..cosmos.evidence.v1beta1.QueryEvidenceResponse\"9\x82\xd3\xe4\x93\x02\x33\x12\x31/cosmos/evidence/v1beta1/evidence/{evidence_hash}\x12\x9d\x01\n\x0b\x41llEvidence\x12\x30.cosmos.evidence.v1beta1.QueryAllEvidenceRequest\x1a\x31.cosmos.evidence.v1beta1.QueryAllEvidenceResponse\")\x82\xd3\xe4\x93\x02#\x12!/cosmos/evidence/v1beta1/evidenceB/Z-github.com/cosmos/cosmos-sdk/x/evidence/typesb\x06proto3'
  ,
  dependencies=[cosmos_dot_base_dot_query_dot_v1beta1_dot_pagination__pb2.DESCRIPTOR,gogoproto_dot_gogo__pb2.DESCRIPTOR,google_dot_protobuf_dot_any__pb2.DESCRIPTOR,google_dot_api_dot_annotations__pb2.DESCRIPTOR,])




_QUERYEVIDENCEREQUEST = _descriptor.Descriptor(
  name='QueryEvidenceRequest',
  full_name='cosmos.evidence.v1beta1.QueryEvidenceRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='evidence_hash', full_name='cosmos.evidence.v1beta1.QueryEvidenceRequest.evidence_hash', index=0,
      number=1, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=b"",
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=b'\372\336\0374github.com/tendermint/tendermint/libs/bytes.HexBytes', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=187,
  serialized_end=290,
)


_QUERYEVIDENCERESPONSE = _descriptor.Descriptor(
  name='QueryEvidenceResponse',
  full_name='cosmos.evidence.v1beta1.QueryEvidenceResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='evidence', full_name='cosmos.evidence.v1beta1.QueryEvidenceResponse.evidence', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=292,
  serialized_end=355,
)


_QUERYALLEVIDENCEREQUEST = _descriptor.Descriptor(
  name='QueryAllEvidenceRequest',
  full_name='cosmos.evidence.v1beta1.QueryAllEvidenceRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='pagination', full_name='cosmos.evidence.v1beta1.QueryAllEvidenceRequest.pagination', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=357,
  serialized_end=442,
)


_QUERYALLEVIDENCERESPONSE = _descriptor.Descriptor(
  name='QueryAllEvidenceResponse',
  full_name='cosmos.evidence.v1beta1.QueryAllEvidenceResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='evidence', full_name='cosmos.evidence.v1beta1.QueryAllEvidenceResponse.evidence', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='pagination', full_name='cosmos.evidence.v1beta1.QueryAllEvidenceResponse.pagination', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=444,
  serialized_end=571,
)

_QUERYEVIDENCERESPONSE.fields_by_name['evidence'].message_type = google_dot_protobuf_dot_any__pb2._ANY
_QUERYALLEVIDENCEREQUEST.fields_by_name['pagination'].message_type = cosmos_dot_base_dot_query_dot_v1beta1_dot_pagination__pb2._PAGEREQUEST
_QUERYALLEVIDENCERESPONSE.fields_by_name['evidence'].message_type = google_dot_protobuf_dot_any__pb2._ANY
_QUERYALLEVIDENCERESPONSE.fields_by_name['pagination'].message_type = cosmos_dot_base_dot_query_dot_v1beta1_dot_pagination__pb2._PAGERESPONSE
DESCRIPTOR.message_types_by_name['QueryEvidenceRequest'] = _QUERYEVIDENCEREQUEST
DESCRIPTOR.message_types_by_name['QueryEvidenceResponse'] = _QUERYEVIDENCERESPONSE
DESCRIPTOR.message_types_by_name['QueryAllEvidenceRequest'] = _QUERYALLEVIDENCEREQUEST
DESCRIPTOR.message_types_by_name['QueryAllEvidenceResponse'] = _QUERYALLEVIDENCERESPONSE
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

QueryEvidenceRequest = _reflection.GeneratedProtocolMessageType('QueryEvidenceRequest', (_message.Message,), {
  'DESCRIPTOR' : _QUERYEVIDENCEREQUEST,
  '__module__' : 'cosmos.evidence.v1beta1.query_pb2'
  # @@protoc_insertion_point(class_scope:cosmos.evidence.v1beta1.QueryEvidenceRequest)
  })
_sym_db.RegisterMessage(QueryEvidenceRequest)

QueryEvidenceResponse = _reflection.GeneratedProtocolMessageType('QueryEvidenceResponse', (_message.Message,), {
  'DESCRIPTOR' : _QUERYEVIDENCERESPONSE,
  '__module__' : 'cosmos.evidence.v1beta1.query_pb2'
  # @@protoc_insertion_point(class_scope:cosmos.evidence.v1beta1.QueryEvidenceResponse)
  })
_sym_db.RegisterMessage(QueryEvidenceResponse)

QueryAllEvidenceRequest = _reflection.GeneratedProtocolMessageType('QueryAllEvidenceRequest', (_message.Message,), {
  'DESCRIPTOR' : _QUERYALLEVIDENCEREQUEST,
  '__module__' : 'cosmos.evidence.v1beta1.query_pb2'
  # @@protoc_insertion_point(class_scope:cosmos.evidence.v1beta1.QueryAllEvidenceRequest)
  })
_sym_db.RegisterMessage(QueryAllEvidenceRequest)

QueryAllEvidenceResponse = _reflection.GeneratedProtocolMessageType('QueryAllEvidenceResponse', (_message.Message,), {
  'DESCRIPTOR' : _QUERYALLEVIDENCERESPONSE,
  '__module__' : 'cosmos.evidence.v1beta1.query_pb2'
  # @@protoc_insertion_point(class_scope:cosmos.evidence.v1beta1.QueryAllEvidenceResponse)
  })
_sym_db.RegisterMessage(QueryAllEvidenceResponse)


DESCRIPTOR._options = None
_QUERYEVIDENCEREQUEST.fields_by_name['evidence_hash']._options = None

_QUERY = _descriptor.ServiceDescriptor(
  name='Query',
  full_name='cosmos.evidence.v1beta1.Query',
  file=DESCRIPTOR,
  index=0,
  serialized_options=None,
  create_key=_descriptor._internal_create_key,
  serialized_start=574,
  serialized_end=908,
  methods=[
  _descriptor.MethodDescriptor(
    name='Evidence',
    full_name='cosmos.evidence.v1beta1.Query.Evidence',
    index=0,
    containing_service=None,
    input_type=_QUERYEVIDENCEREQUEST,
    output_type=_QUERYEVIDENCERESPONSE,
    serialized_options=b'\202\323\344\223\0023\0221/cosmos/evidence/v1beta1/evidence/{evidence_hash}',
    create_key=_descriptor._internal_create_key,
  ),
  _descriptor.MethodDescriptor(
    name='AllEvidence',
    full_name='cosmos.evidence.v1beta1.Query.AllEvidence',
    index=1,
    containing_service=None,
    input_type=_QUERYALLEVIDENCEREQUEST,
    output_type=_QUERYALLEVIDENCERESPONSE,
    serialized_options=b'\202\323\344\223\002#\022!/cosmos/evidence/v1beta1/evidence',
    create_key=_descriptor._internal_create_key,
  ),
])
_sym_db.RegisterServiceDescriptor(_QUERY)

DESCRIPTOR.services_by_name['Query'] = _QUERY

# @@protoc_insertion_point(module_scope)
