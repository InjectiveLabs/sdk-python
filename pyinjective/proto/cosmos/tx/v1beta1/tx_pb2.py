# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: cosmos/tx/v1beta1/tx.proto
# Protobuf Python Version: 4.25.3
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import symbol_database as _symbol_database
from google.protobuf.internal import builder as _builder
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from pyinjective.proto.gogoproto import gogo_pb2 as gogoproto_dot_gogo__pb2
from pyinjective.proto.cosmos.crypto.multisig.v1beta1 import multisig_pb2 as cosmos_dot_crypto_dot_multisig_dot_v1beta1_dot_multisig__pb2
from pyinjective.proto.cosmos.base.v1beta1 import coin_pb2 as cosmos_dot_base_dot_v1beta1_dot_coin__pb2
from pyinjective.proto.cosmos.tx.signing.v1beta1 import signing_pb2 as cosmos_dot_tx_dot_signing_dot_v1beta1_dot_signing__pb2
from google.protobuf import any_pb2 as google_dot_protobuf_dot_any__pb2
from pyinjective.proto.cosmos_proto import cosmos_pb2 as cosmos__proto_dot_cosmos__pb2


DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\x1a\x63osmos/tx/v1beta1/tx.proto\x12\x11\x63osmos.tx.v1beta1\x1a\x14gogoproto/gogo.proto\x1a-cosmos/crypto/multisig/v1beta1/multisig.proto\x1a\x1e\x63osmos/base/v1beta1/coin.proto\x1a\'cosmos/tx/signing/v1beta1/signing.proto\x1a\x19google/protobuf/any.proto\x1a\x19\x63osmos_proto/cosmos.proto\"\x8d\x01\n\x02Tx\x12-\n\x04\x62ody\x18\x01 \x01(\x0b\x32\x19.cosmos.tx.v1beta1.TxBodyR\x04\x62ody\x12\x38\n\tauth_info\x18\x02 \x01(\x0b\x32\x1b.cosmos.tx.v1beta1.AuthInfoR\x08\x61uthInfo\x12\x1e\n\nsignatures\x18\x03 \x03(\x0cR\nsignatures\"n\n\x05TxRaw\x12\x1d\n\nbody_bytes\x18\x01 \x01(\x0cR\tbodyBytes\x12&\n\x0f\x61uth_info_bytes\x18\x02 \x01(\x0cR\rauthInfoBytes\x12\x1e\n\nsignatures\x18\x03 \x03(\x0cR\nsignatures\"\x92\x01\n\x07SignDoc\x12\x1d\n\nbody_bytes\x18\x01 \x01(\x0cR\tbodyBytes\x12&\n\x0f\x61uth_info_bytes\x18\x02 \x01(\x0cR\rauthInfoBytes\x12\x19\n\x08\x63hain_id\x18\x03 \x01(\tR\x07\x63hainId\x12%\n\x0e\x61\x63\x63ount_number\x18\x04 \x01(\x04R\raccountNumber\"\xee\x01\n\x10SignDocDirectAux\x12\x1d\n\nbody_bytes\x18\x01 \x01(\x0cR\tbodyBytes\x12\x33\n\npublic_key\x18\x02 \x01(\x0b\x32\x14.google.protobuf.AnyR\tpublicKey\x12\x19\n\x08\x63hain_id\x18\x03 \x01(\tR\x07\x63hainId\x12%\n\x0e\x61\x63\x63ount_number\x18\x04 \x01(\x04R\raccountNumber\x12\x1a\n\x08sequence\x18\x05 \x01(\x04R\x08sequence\x12(\n\x03tip\x18\x06 \x01(\x0b\x32\x16.cosmos.tx.v1beta1.TipR\x03tip\"\x95\x02\n\x06TxBody\x12\x30\n\x08messages\x18\x01 \x03(\x0b\x32\x14.google.protobuf.AnyR\x08messages\x12\x12\n\x04memo\x18\x02 \x01(\tR\x04memo\x12%\n\x0etimeout_height\x18\x03 \x01(\x04R\rtimeoutHeight\x12\x42\n\x11\x65xtension_options\x18\xff\x07 \x03(\x0b\x32\x14.google.protobuf.AnyR\x10\x65xtensionOptions\x12Z\n\x1enon_critical_extension_options\x18\xff\x0f \x03(\x0b\x32\x14.google.protobuf.AnyR\x1bnonCriticalExtensionOptions\"\xa0\x01\n\x08\x41uthInfo\x12@\n\x0csigner_infos\x18\x01 \x03(\x0b\x32\x1d.cosmos.tx.v1beta1.SignerInfoR\x0bsignerInfos\x12(\n\x03\x66\x65\x65\x18\x02 \x01(\x0b\x32\x16.cosmos.tx.v1beta1.FeeR\x03\x66\x65\x65\x12(\n\x03tip\x18\x03 \x01(\x0b\x32\x16.cosmos.tx.v1beta1.TipR\x03tip\"\x97\x01\n\nSignerInfo\x12\x33\n\npublic_key\x18\x01 \x01(\x0b\x32\x14.google.protobuf.AnyR\tpublicKey\x12\x38\n\tmode_info\x18\x02 \x01(\x0b\x32\x1b.cosmos.tx.v1beta1.ModeInfoR\x08modeInfo\x12\x1a\n\x08sequence\x18\x03 \x01(\x04R\x08sequence\"\xe0\x02\n\x08ModeInfo\x12<\n\x06single\x18\x01 \x01(\x0b\x32\".cosmos.tx.v1beta1.ModeInfo.SingleH\x00R\x06single\x12\x39\n\x05multi\x18\x02 \x01(\x0b\x32!.cosmos.tx.v1beta1.ModeInfo.MultiH\x00R\x05multi\x1a\x41\n\x06Single\x12\x37\n\x04mode\x18\x01 \x01(\x0e\x32#.cosmos.tx.signing.v1beta1.SignModeR\x04mode\x1a\x90\x01\n\x05Multi\x12K\n\x08\x62itarray\x18\x01 \x01(\x0b\x32/.cosmos.crypto.multisig.v1beta1.CompactBitArrayR\x08\x62itarray\x12:\n\nmode_infos\x18\x02 \x03(\x0b\x32\x1b.cosmos.tx.v1beta1.ModeInfoR\tmodeInfosB\x05\n\x03sum\"\xeb\x01\n\x03\x46\x65\x65\x12\x63\n\x06\x61mount\x18\x01 \x03(\x0b\x32\x19.cosmos.base.v1beta1.CoinB0\xc8\xde\x1f\x00\xaa\xdf\x1f(github.com/cosmos/cosmos-sdk/types.CoinsR\x06\x61mount\x12\x1b\n\tgas_limit\x18\x02 \x01(\x04R\x08gasLimit\x12.\n\x05payer\x18\x03 \x01(\tB\x18\xd2\xb4-\x14\x63osmos.AddressStringR\x05payer\x12\x32\n\x07granter\x18\x04 \x01(\tB\x18\xd2\xb4-\x14\x63osmos.AddressStringR\x07granter\"\x9c\x01\n\x03Tip\x12\x63\n\x06\x61mount\x18\x01 \x03(\x0b\x32\x19.cosmos.base.v1beta1.CoinB0\xc8\xde\x1f\x00\xaa\xdf\x1f(github.com/cosmos/cosmos-sdk/types.CoinsR\x06\x61mount\x12\x30\n\x06tipper\x18\x02 \x01(\tB\x18\xd2\xb4-\x14\x63osmos.AddressStringR\x06tipper\"\xce\x01\n\rAuxSignerData\x12\x32\n\x07\x61\x64\x64ress\x18\x01 \x01(\tB\x18\xd2\xb4-\x14\x63osmos.AddressStringR\x07\x61\x64\x64ress\x12>\n\x08sign_doc\x18\x02 \x01(\x0b\x32#.cosmos.tx.v1beta1.SignDocDirectAuxR\x07signDoc\x12\x37\n\x04mode\x18\x03 \x01(\x0e\x32#.cosmos.tx.signing.v1beta1.SignModeR\x04mode\x12\x10\n\x03sig\x18\x04 \x01(\x0cR\x03sigB\xad\x01\n\x15\x63om.cosmos.tx.v1beta1B\x07TxProtoP\x01Z%github.com/cosmos/cosmos-sdk/types/tx\xa2\x02\x03\x43TX\xaa\x02\x11\x43osmos.Tx.V1beta1\xca\x02\x11\x43osmos\\Tx\\V1beta1\xe2\x02\x1d\x43osmos\\Tx\\V1beta1\\GPBMetadata\xea\x02\x13\x43osmos::Tx::V1beta1b\x06proto3')

_globals = globals()
_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, _globals)
_builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, 'cosmos.tx.v1beta1.tx_pb2', _globals)
if _descriptor._USE_C_DESCRIPTORS == False:
  _globals['DESCRIPTOR']._options = None
  _globals['DESCRIPTOR']._serialized_options = b'\n\025com.cosmos.tx.v1beta1B\007TxProtoP\001Z%github.com/cosmos/cosmos-sdk/types/tx\242\002\003CTX\252\002\021Cosmos.Tx.V1beta1\312\002\021Cosmos\\Tx\\V1beta1\342\002\035Cosmos\\Tx\\V1beta1\\GPBMetadata\352\002\023Cosmos::Tx::V1beta1'
  _globals['_FEE'].fields_by_name['amount']._options = None
  _globals['_FEE'].fields_by_name['amount']._serialized_options = b'\310\336\037\000\252\337\037(github.com/cosmos/cosmos-sdk/types.Coins'
  _globals['_FEE'].fields_by_name['payer']._options = None
  _globals['_FEE'].fields_by_name['payer']._serialized_options = b'\322\264-\024cosmos.AddressString'
  _globals['_FEE'].fields_by_name['granter']._options = None
  _globals['_FEE'].fields_by_name['granter']._serialized_options = b'\322\264-\024cosmos.AddressString'
  _globals['_TIP'].fields_by_name['amount']._options = None
  _globals['_TIP'].fields_by_name['amount']._serialized_options = b'\310\336\037\000\252\337\037(github.com/cosmos/cosmos-sdk/types.Coins'
  _globals['_TIP'].fields_by_name['tipper']._options = None
  _globals['_TIP'].fields_by_name['tipper']._serialized_options = b'\322\264-\024cosmos.AddressString'
  _globals['_AUXSIGNERDATA'].fields_by_name['address']._options = None
  _globals['_AUXSIGNERDATA'].fields_by_name['address']._serialized_options = b'\322\264-\024cosmos.AddressString'
  _globals['_TX']._serialized_start=246
  _globals['_TX']._serialized_end=387
  _globals['_TXRAW']._serialized_start=389
  _globals['_TXRAW']._serialized_end=499
  _globals['_SIGNDOC']._serialized_start=502
  _globals['_SIGNDOC']._serialized_end=648
  _globals['_SIGNDOCDIRECTAUX']._serialized_start=651
  _globals['_SIGNDOCDIRECTAUX']._serialized_end=889
  _globals['_TXBODY']._serialized_start=892
  _globals['_TXBODY']._serialized_end=1169
  _globals['_AUTHINFO']._serialized_start=1172
  _globals['_AUTHINFO']._serialized_end=1332
  _globals['_SIGNERINFO']._serialized_start=1335
  _globals['_SIGNERINFO']._serialized_end=1486
  _globals['_MODEINFO']._serialized_start=1489
  _globals['_MODEINFO']._serialized_end=1841
  _globals['_MODEINFO_SINGLE']._serialized_start=1622
  _globals['_MODEINFO_SINGLE']._serialized_end=1687
  _globals['_MODEINFO_MULTI']._serialized_start=1690
  _globals['_MODEINFO_MULTI']._serialized_end=1834
  _globals['_FEE']._serialized_start=1844
  _globals['_FEE']._serialized_end=2079
  _globals['_TIP']._serialized_start=2082
  _globals['_TIP']._serialized_end=2238
  _globals['_AUXSIGNERDATA']._serialized_start=2241
  _globals['_AUXSIGNERDATA']._serialized_end=2447
# @@protoc_insertion_point(module_scope)
